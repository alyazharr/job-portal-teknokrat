image: python:3.9.7

stages:
  - test
  - sonarqube
  - deploy

Test:
  image: python:3.9.7
  stage: test
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  before_script:
    - pip3 install -r requirements.txt
    - python manage.py migrate
    - python manage.py collectstatic --no-input
  when: on_success
  script:
    - coverage run --omit="**/__init__.py,*/admin.py,*/apps.py,manage.py,*/test/*,static/*,static/**,*/wsgi.py,*/asgi.py,*/settings.py,**/static/**" manage.py test
    - coverage report -m
    - coverage xml -i
  artifacts:
    paths:
      - coverage.xml
  only:
    - master
    - staging
    - merge_requests

sonarqube-check:
  stage: sonarqube
  dependencies:
    - Test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -X
      -D"sonar.projectKey=$SONAR_PROJECT_KEY"
      -D"sonar.sources=."
      -D"sonar.host.url=$SONAR_HOST_URL"
      -D"sonar.login=$SONAR_TOKEN"
      -D"sonar.coverage.exclusions=**/__init__.py,*/admin.py,*/apps.py,manage.py,*/test/*,static/*,static/**,*/wsgi.py,*/asgi.py,*/settings.py,**/static/**"
      -D"sonar.python.coverage.reportPaths=./coverage.xml"
  allow_failure: true
  only:
    - master
    - staging
    - merge_requests

Deployment:
  image: ruby:latest
  stage: deploy
  before_script:
    - gem install dpl
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  environment:
    name: master
    url: $HEROKU_APP_HOST
  only:
    - master

Dev Deployment:
  stage: deploy
  only:
    - staging
    - deploy
  image: google/cloud-sdk
  services:
    - docker:dind
  script:
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
    - cat $ENV > .env.yaml
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud builds submit . --config=cloudbuild.yaml
