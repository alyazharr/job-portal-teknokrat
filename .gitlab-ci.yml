image: python:3.9.7

stages:
  - test
  - sonarqube
  - deploy

Test:
  image: python:3.9.7
  stage: test
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  before_script:
    - pip3 install -r requirements.txt
    - python manage.py migrate
    - python manage.py collectstatic --no-input
  when: on_success
  script:
    - coverage run --include="./*/*" --omit="./manage.py" manage.py test
    - coverage report -m
    - coverage xml -i
  artifacts:
    paths:
      - coverage.xml
  only:
    - master

sonarqube-check:
  stage: sonarqube
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -X
      -D"sonar.projectKey=$SONAR_PROJECT_KEY"
      -D"sonar.sources=."
      -D"sonar.host.url=$SONAR_HOST_URL"
      -D"sonar.login=$SONAR_TOKEN"
  allow_failure: true
  only:
    - master

Deployment:
  image: ruby:latest
  stage: deploy
  before_script:
    - gem install dpl
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  environment:
    name: master
    url: $HEROKU_APP_HOST
  only:
    - master
